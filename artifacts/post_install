#!/bin/bash

#
#
#
highlight () { 

     echo -e "\e[32m\e[1m${1}\e[0m"
}

banner () {

    echo ""
    highlight $DASH
    highlight "$1"
    highlight $DASH
}

#
# tool functions
#
overlay_file () {

    echo "cp /overlay$1 $1"
    cp /overlay$1 $1
}

install_service () {

    overlay_file /lib/systemd/system/$1.service
}

enable_service () {

    # ln -s /etc/systemd/system/$1.service /lib/systemd/system/multi-user.target.wants/$1.service 
    echo "$1 service enabled"
    highlight  "not implemented yet"
}

#
# prepare partitions and folders
#
prepare() {

    mkdir /mininas

    mount -t ext4 /dev/mmcblk0p2 /mininas

    mkdir -p /mininas/boot
    mkdir -p /mininas/ping
    mkdir -p /mininas/pong

    mkdir -p /etc/mininas
    mkdir -p /etc/mininas/templates

    ln -s /mininas/ping /etc/mininas/data
    mkdir -p /etc/mininas/data/configs
    mkdir -p /etc/mininas/data/mysql

    overlay_file "/etc/fstab"

    # mkdir here and change owner/group in create users
    mkdir -p /mnt/winsun

    echo "p2 is mounted and ready"
}

#
# apt source list, default, and proxy
#
config_apt () {

    overlay_file "/etc/apt/sources.list"
    overlay_file "/etc/apt/apt.conf.d/70debconf"
    apt-get update
    echo "done"
}

#
# install ssh, enable root login
#
install_ssh () {

    apt-get -y install openssh-server
    overlay_file "/etc/ssh/sshd_config"
    echo "ssh server installed and configured"
}

#
# install ssdp and unit file
#
install_ssdp () {

    local FILE="/usr/local/sbin/ssdp"

    overlay_file $FILE
    chmod a+x $FILE

    install_service ssdp
    enable_service ssdp
}

install_keys_and_leds () {

    local FILE="/usr/local/sbin/powerkey_chk.sh"    

    overlay_file $FILE
    chmod a+x $FILE

    install_service keys-and-leds
    enable_service keys-and-leds
}

install_updated_starter () {

    local FILE="/usr/local/sbin/updated_starter.sh"
    
    overlay_file $FILE
    chmod a+x $FILE

    install_service updated-starter
    enable_service updated-starter
}

create_users () {

    # change UID_MAX to 2000", does NOT work
    # overlay_file "/etc/login.defs"
    
    adduser --uid 1000 --gecos ",,," --disabled-password --disabled-login --no-create-home admin
    echo "admin:123456" | chpasswd

    adduser --uid 990 --gecos ",,," --disabled-password --disabled-login --no-create-home smb_guest
    adduser --uid 989 --gecos ",,," --disabled-password --disabled-login --no-create-home thunder

    chown admin:admin /mnt/winsun

    # add user to group
    adduser thunder admin
}

install_mysql () {

    #install mysql
    local MYSQL_PASSWORD="wenshang"

    echo "mysql-server-5.5 mysql-server/root_password password ${MYSQL_PASSWORD}" | debconf-set-selections
    echo "mysql-server-5.5 mysql-server/root_password_again password ${MYSQL_PASSWORD}" | debconf-set-selections

    apt-get -y install mysql-server-5.5

    echo "mysql installed"
}

install_samba () {

    apt-get -y install samba

    overlay_file "/etc/samba/smb.conf"
    overlay_file "/etc/mininas/data/configs/samba.json"

    echo "please input 123456, twice"    
    smbpasswd -a admin
}

install_proftpd () {

    apt-get -y install proftpd-basic
    
    overlay_file "/etc/proftpd/proftpd.conf"
    overlay_file "/etc/mininas/data/configs/proftpd.json"
}

install_deb_packages () {

    apt-get -y --force-yes install expect \
        python python-django python-setuptools python-pip python-mysql.connector python-dev python-libtorrent libmysqlclient-dev python-mysqldb \
        python-psutil python-imaging proftpd-basic curl minidlna avahi-daemon libusb-1.0-0 libusb-1.0-0-dev

    # pick btrfs-tools from sid
    apt-get -y -t sid install btrfs-tools

    echo "deb packages installed"
}

install_python_packages () {

    local SETUPTOOLS_SOURCE_PATH="http://mirrors.aliyun.com/pypi/simple/"

    easy_install -i ${SETUPTOOLS_SOURCE_PATH} ntplib pexpect eyeD3 django_debug_toolbar apscheduler
    
    cd /overlay/install/psutil-3.2.1/
    python setup.py install
    cd -    

    echo "python packages installed"
}

install_mininas_app () {

    mkdir -p /srv/mini
    tar xzf /overlay/install/aaa.tar.gz -C /srv/mini
    
    # systemd can not be used in chroot
    # systemctl start mysql
    /etc/init.d/mysql start

    mysql -u$MYSQL_ROOT -p$MYSQL_PASSWORD << EOF
        CREATE DATABASE mininas DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
EOF
    # TODO
    # python manage.py makemigrations
    # python manage.py migrate

    mysql -u$MYSQL_ROOT -p$MYSQL_PASSWORD << EOF
        use mininas;
        insert into mini_syssetting (uploadrootpath,samba,ftp) value ("/mnt/",0,0);
        insert into mini_user (UserName,Password,realname,email) value ("admin","123456","winsun","sdfawef@assd.net");
        insert into mini_ntpinfo (address,port,refreshtime) value ("202.112.10.36",123,3600);
EOF

}

install_thunder() {

    # thunder need 
    apt-get -y install lib32z1

    mkdir -p /opt
    cp -r /overlay/opt/xware /opt

    chown thunder:thunder /opt/xware
    chmod 755 /opt/xware

    chown thunder:thunder /opt/xware/EmbedThunderManager
    chmod 755 /opt/xware/EmbedThunderManager

    chown thunder:thunder /opt/xware/ETMDaemon
    chmod 755 /opt/xware/ETMDaemon

    chown thunder:thunder /opt/xware/portal
    chmod 755 /opt/xware/portal

    chown thunder:thunder /opt/xware/vod_httpserver
    chmod 755 /opt/xware/vod_httpserver
}

install_dlna () {
    
    apt-get -y install minidlna

        
}

install_netatalk() {
    
    apt-get -y -t sid install netatalk
}

install_kernel() {

    echo "installing kernel"

    dpkg -i /overlay/install/linux-image-4.3.3.001\+_001_amd64.deb

    ln -s vmlinuz-4.3.3.001\+ /boot/bzImage;         
    ln -s initrd.img-4.3.3.001\+ /boot/ramdisk;      
    echo "console=tty0 console=ttyS0,115200 root=/dev/mmcblk0p1 rootwait" > /boot/cmdline

    echo "done"
}

do_cleanup() {
    
    echo "clean apt cache"
    apt-get clean

    echo "clean udev eth rules"
    rm -rf /etc/udev/rules.d/70-persistent-net.rules

    echo "clean apt proxy"
    rm -rf /etc/apt/apt.conf
}

install_all() {
    
    prepare
    config_apt
    install_ssh
    install_ssdp
    install_keys_and_leds
    install_updated_starter
    create_users
    install_mysql
    install_samba
    install_proftpd
    install_deb_packages
    install_python_packages
    install_mininas_app      
    install_thunder
    install_dlna
    install_netatalk
    install_kernel
    do_cleanup   
}














