#!/bin/bash

DEBUG="yes"

LABEL="winsun"
DATAMODE=

#
# -L label (optional)
# -d data mode (optional)
#
while getopts ":L:d:" opt; do

    case $opt in
        L)
            LABEL="$OPTARG"
            shift 2
            ;;
        d)
            DATAMODE="$OPTARG"
            shift 2
            ;;
        \?)
            echo "unrecognized option"
            exit 1
        ;;
    esac
done

if [ -z "$1" ]; then
    echo "provide disk slot numbers please"
    exit 1
fi

#
# TODO should we do it now?
#
mininas_disk_probe

#
# validate slot number
#
for slot in $@ ; do
    if [ ! -d "/run/mininas/chassis/$slot" ]; then
        echo "invalid slot number"
        exit 1
    fi
done

#
# sort and remove duplicate, DEVPATH is a multiple line string, containing 
# device file path each line (eg. /dev/sda)
#
DEVPATH=$( (for slot in $@; do echo $(cat /run/mininas/chassis/$slot/path); done) | sort -u )
DEVPATH_ONELINE=$(echo "$DEVPATH" | tr '\n' ' ')
if [ ! -z "$DEBUG" ]; then
    echo "---"
    echo "DEVPATH:"
    echo "$DEVPATH"
    echo "DEVPATH_ONELINE: $DEVPATH_ONELINE"
    echo "---"
fi

#
# run mkfs.btrfs command
#
if [ -z "$DATAMODE" ]; then
    mkfs.btrfs -f -L $LABEL $DEVPATH_ONELINE 
else
    mkfs.btrfs -f -L $LABEL -d $DATAMODE $DEVPATH_ONELINE
fi

if [ "$?" -ne 0 ]; then 
    echo "mkfs.btrfs failed"
    exit 1
fi

UUID_SET=$(btrfs filesystem show 2>&1 | grep -P "^Label: " | sed -n -e 's/^.*uuid: //p')
if [ -z "$UUID_SET" ]; then
    echo "no valid filesystem uuid found"
    exit 2
fi

if [ ! -z "$DEBUG" ]; then
    echo "UUID_SET"
fi

exit 0

UUID=
for uuid in $UUID_SET ; do

    if [ -z "$uuid" ]; then continue; fi

    device_files=$(btrfs filesystem show $uuid 2>&1 | grep -P "\tdevid +\d+ size" | awk ' { print $8 }' | sort)

    if [[ "${DEVICE_FILES}" == "$device_files" ]]; then 
        UUID="$uuid"
        break
    fi
done

if [ -z "$UUID" ]; then
    exit 3
fi



