#!/bin/bash

#
# currently only /mnt/1 is supported
# 

POOLPATH=/run/mininas/dvm/pools/1
UNITFILE=/lib/systemd/system/mnt-1.mount

source /usr/local/sbin/mininas_dvm

mkdir -p $POOLPATH
rm -rf $POOLPATH/*

#
# enabled
#
TEMP=$( systemctl is-enabled mnt-1.mount )
if [ "$TEMP" = "enabled" ]; then
    ENABLED=1
else
    ENABLED=0
fi

#
# autostart
#
if grep -P "WantedBy *= *multi-user[.]target" /lib/systemd/system/mnt-1.mount > /dev/null ; then
    AUTOSTART=1
else
    AUTOSTART=0
fi

#
# what, where, type
#
WHAT=$(cat $UNITFILE | grep -P "^What *=" | sed "s/^What *= *//")
WHERE=$(cat $UNITFILE | grep -P "^Where *=" | sed -n -e "s/^Where *= *//p")
TYPE=$(cat $UNITFILE | grep -P "^Type *=" | sed -n -e "s/^Type *= *//p")

echo "$ENABLED" > $POOLPATH/enabled
echo "$AUTOSTART" > $POOLPATH/autostart

#
# uuid file always exists, may be a valid UUID or empty
#
if [ ! -z "$WHAT" ]; then

    UUID=$( echo "$WHAT" | sed "s/^UUID=//" )
    echo "$UUID" > $POOLPATH/uuid

else 
    touch $POOLPATH/uuid
fi

#
# volume folder always exists
#
# if UUID is set and "at least one disk in volume is in chassis"
# volume is created as symlink to runtime info.
# otherwise it is an empty folder
#
# TODO maybe one line works. test in future.
#
if [ ! -z "$WHAT" ]; then

    if ls -1 $R_VOLUMES | grep "$UUID" > /dev/null ; then
        ln -s $R_VOLUMES/$UUID $POOLPATH/volume
    else
        # empty folder
        mkdir $POOLPATH/volume
    fi
else
    # empty folder
    mkdir $POOLPATH/volume
fi

#
# add link to snapshot
#     
ln -s /etc/mininas/data/dvm/pools/1/snapshot $POOLPATH/snapshot

#
#
# retrieve name
ln -s /etc/mininas/data/dvm/pools/1/name $POOLPATH/name


echo "$WHERE" > $POOLPATH/mountpoint
echo "$TYPE" > $POOLPATH/type


#
# decorate volume's missing set
#






